<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>安装kubeadmkubeletkubectl</title>
      <link href="/2021/06/26/ckqdgnkzz000844nk9ah4752v.html"/>
      <url>/2021/06/26/ckqdgnkzz000844nk9ah4752v.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-准备环境"><a href="#1-准备环境" class="headerlink" title="1. 准备环境"></a>1. 准备环境</h2><table><thead><tr><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>k8s-master</td><td>192.168.0.213</td></tr><tr><td>k8s-node1</td><td>192.168.0.214</td></tr><tr><td>k8s-node2</td><td>192.168.0.215</td></tr></tbody></table><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 关闭防火墙：</span>systemctl stop firewalldsystemctl disable firewalld<span class="token comment"># 关闭selinux：</span><span class="token function">sed</span> -i <span class="token string">'s/enforcing/disabled/'</span> /etc/selinux/config  <span class="token comment"># 永久</span>setenforce <span class="token number">0</span>  <span class="token comment"># 临时</span><span class="token comment"># 关闭swap：</span>swapoff -a  <span class="token comment"># 临时</span><span class="token function">vim</span> /etc/fstab  <span class="token comment"># 永久</span><span class="token comment"># 设置主机名：</span>hostnamectl set-hostname <span class="token operator">&lt;</span>hostname<span class="token operator">&gt;</span><span class="token comment"># 在master添加hosts：</span><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/hosts <span class="token operator">&lt;&lt;</span> <span class="token string">EOF192.168.0.213 k8s-master192.168.0.214 k8s-node1192.168.0.215 k8s-node2EOF</span>将桥接的IPv4流量传递到iptables的链：<span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/sysctl.d/k8s.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOFnet.bridge.bridge-nf-call-ip6tables = 1net.bridge.bridge-nf-call-iptables = 1EOF</span>sysctl --system  <span class="token comment"># 生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><span id="more"></span><h2 id="2-安装Docker-kubeadm-kubelet-kubectl"><a href="#2-安装Docker-kubeadm-kubelet-kubectl" class="headerlink" title="2. 安装Docker/kubeadm/kubelet/kubectl"></a>2. 安装Docker/kubeadm/kubelet/kubectl</h2><h3 id="2-1-安装Docker"><a href="#2-1-安装Docker" class="headerlink" title="2.1 安装Docker"></a>2.1 安装Docker</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repoyum -y <span class="token function">install</span> docker-ce-18.06.1.ce-3.el7<span class="token comment"># 配置加速器</span><span class="token function">mkdir</span> /etc/docker<span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span> <span class="token string">EOF{  "registry-mirrors": ["https://0yd85e5a.mirror.aliyuncs.com"]}EOF</span>systemctl <span class="token builtin class-name">enable</span> docker <span class="token operator">&amp;&amp;</span> systemctl start dockerdocker --versionDocker version <span class="token number">18.06</span>.1-ce, build e68fc7a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-添加阿里云YUM软件源"><a href="#2-2-添加阿里云YUM软件源" class="headerlink" title="2.2 添加阿里云YUM软件源"></a>2.2 添加阿里云YUM软件源</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/yum.repos.d/kubernetes.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF[kubernetes]name=Kubernetesbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64enabled=1gpgcheck=0repo_gpgcheck=0gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpgEOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-安装kubeadm，kubelet和kubectl"><a href="#2-3-安装kubeadm，kubelet和kubectl" class="headerlink" title="2.3 安装kubeadm，kubelet和kubectl"></a>2.3 安装kubeadm，kubelet和kubectl</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> -y kubeadm-1.18.3 kubectl-1.18.3 kubelet-1.18.3systemctl <span class="token builtin class-name">enable</span> kubelet<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-部署Kubernetes-Master"><a href="#3-部署Kubernetes-Master" class="headerlink" title="3. 部署Kubernetes Master"></a>3. 部署Kubernetes Master</h2><p>在 192.168.0.213 (Master) 执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubeadm init <span class="token punctuation">\</span>--apiserver-advertise-address<span class="token operator">=</span><span class="token number">192.168</span>.0.213 <span class="token punctuation">\</span>--image-repository registry.aliyuncs.com/google_containers <span class="token punctuation">\</span>--kubernetes-version v1.18.3 <span class="token punctuation">\</span>--service-cidr<span class="token operator">=</span><span class="token number">10.96</span>.0.0/12 <span class="token punctuation">\</span>--pod-network-cidr<span class="token operator">=</span><span class="token number">10.244</span>.0.0/16 <span class="token punctuation">\</span>--ignore-preflight-errors<span class="token operator">=</span>all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>or</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vi kubeadm.conf</span>apiVersion: kubeadm.k8s.io/v1beta2kind: ClusterConfigurationkubernetesVersion: v1.18.3imageRepository: registry.aliyuncs.com/google_containers networking:  podSubnet: <span class="token number">10.244</span>.0.0/16   serviceSubnet: <span class="token number">10.96</span>.0.0/12 kubeadm init --config kubeadm.conf --ignore-preflight-errors<span class="token operator">=</span>all <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址。</p><p>使用kubectl工具：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p <span class="token environment constant">$HOME</span>/.kube<span class="token function">sudo</span> <span class="token function">cp</span> -i /etc/kubernetes/admin.conf <span class="token environment constant">$HOME</span>/.kube/config<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> -u<span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> -g<span class="token variable">)</span></span> <span class="token environment constant">$HOME</span>/.kube/configkubectl get nodes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-加入Kubernetes-Node"><a href="#4-加入Kubernetes-Node" class="headerlink" title="4. 加入Kubernetes Node"></a>4. 加入Kubernetes Node</h2><p>在192.168.0.214/215 (Node) 执行</p><p>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubeadm <span class="token function">join</span> <span class="token number">192.168</span>.0.213:6443 --token zuw832.jq583xz01n9k24q1 <span class="token punctuation">\</span>    --discovery-token-ca-cert-hash sha256:069dd0fa2d23a61dd66441590f90c88a864e1ae08bb8286ca3208a8a95f5b9e2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-安装网络-Calico"><a href="#5-安装网络-Calico" class="headerlink" title="5. 安装网络 Calico"></a>5. 安装网络 Calico</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply -f https://docs.projectcalico.org/v3.14/manifests/calico.yamlkubectl get pods -n kube-system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-测试kubernetes集群"><a href="#6-测试kubernetes集群" class="headerlink" title="6. 测试kubernetes集群"></a>6. 测试kubernetes集群</h2><ul><li>验证Pod工作</li><li>验证Pod网络通信</li><li>验证DNS解析</li></ul><p>在Kubernetes集群中创建一个pod，验证是否正常运行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create deployment web --image<span class="token operator">=</span>nginx:1.17kubectl expose deployment web --port<span class="token operator">=</span><span class="token number">80</span> --target-port<span class="token operator">=</span><span class="token number">80</span> --name<span class="token operator">=</span>web-service --type<span class="token operator">=</span>NodePortkubectl get pods,svc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问地址：<a href="http://NodeIP:Port">http://NodeIP:Port</a>  </p><h2 id="7-部署-Dashboard"><a href="#7-部署-Dashboard" class="headerlink" title="7. 部署 Dashboard"></a>7. 部署 Dashboard</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml<span class="token comment"># 修改镜像地址 recommended.yaml</span>image: registry.cn-hangzhou.aliyuncs.com/google_containers/dashboard:v2.0.3image: registry.cn-hangzhou.aliyuncs.com/kubernetesui/metrics-scraper:v1.0.4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">labels</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort  <span class="token key atrule">ports</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">443</span>      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8443</span>      <span class="token key atrule">nodePort</span><span class="token punctuation">:</span> <span class="token number">30001</span>  <span class="token key atrule">selector</span><span class="token punctuation">:</span>    <span class="token key atrule">k8s-app</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问地址：<a href="https://nodeip:30001/">https://NodeIP:30001</a></p><p>创建service account并绑定默认cluster-admin管理员集群角色：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kubectl create serviceaccount dashboard-admin -n kube-systemkubectl create clusterrolebinding dashboard-admin --clusterrole<span class="token operator">=</span>cluster-admin --serviceaccount<span class="token operator">=</span>kube-system:dashboard-adminkubectl describe secrets -n kube-system <span class="token variable"><span class="token variable">$(</span>kubectl -n kube-system get secret <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/dashboard-admin/{print <span class="token variable">$1</span>}'</span><span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>使用输出的token登录Dashboard。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8S </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/24/ckqdgnkzb000144nk00jf18w1.html"/>
      <url>/2021/06/24/ckqdgnkzb000144nk00jf18w1.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
